"use strict";var precacheConfig=[["/index.html","bc6f855f0e58a8326918fe675b49347d"],["/static/css/main.596556b6.css","1af2755dd5a0ea82f7e882fff6155283"],["/static/js/main.ab7e18e6.js","0a131d889e3407f27108630a54096e81"],["/static/media/0.dbdedba2.png","dbdedba2d1dbcd3a5087faea8a8f2afd"],["/static/media/1.cce86725.png","cce86725251af159a6bc1ac915255f26"],["/static/media/2.bb8ffb9d.png","bb8ffb9d53180bf40513e100e458eeae"],["/static/media/Abraham_Simpson.119516aa.jpg","119516aa3fbbafff5a913d1354bc9131"],["/static/media/Barney_Gumble.16d767ea.jpg","16d767eae88e7d470511b642f737d01f"],["/static/media/Bart_Simpson.ff18c886.jpg","ff18c886164e5f8ea3fb23d29418e75f"],["/static/media/Clancy_Wiggum.7b2b857d.jpg","7b2b857dd8c43905bf5543e839f68f8d"],["/static/media/Eleanor_Abernathy.b8aca331.jpg","b8aca331cf2c4116594f31053dedee58"],["/static/media/Fat_Tony.4296716d.jpg","4296716d42cbdf7edbae26b666bf8988"],["/static/media/Groundskeeper_Willie.7b429ece.jpg","7b429ece6d6de73a2037e14a98e433cc"],["/static/media/Homer_Simpson.d25758dd.jpg","d25758dd1d0efe0811316d0d8436ffac"],["/static/media/Horatio_McCallister.70cb332f.jpg","70cb332f78dc7dca7164094c24331dfd"],["/static/media/Moe_Szyslak.a285d770.jpg","a285d770c633e3917f09d7d9d8eeec48"],["/static/media/Mr_Burns.7f676833.jpg","7f676833c183b97988c1a0f6a588a698"],["/static/media/Seymour_Skinner.986d8727.jpg","986d8727ebe7cdb0e1917d90ef93f692"],["/static/media/transparent.c8caf050.png","c8caf050ca8315c42fc1c35da5cfe466"],["/static/media/white.a73e7b14.png","a73e7b149176676876fb68cfc5cd97d8"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});